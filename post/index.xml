<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Gordon的IT技术文档</title>
    <link>/post/</link>
    <description>Recent content in Posts on Gordon的IT技术文档</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 02 Dec 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Nacos集群部署</title>
      <link>/post/nacos-cluster-deploy/</link>
      <pubDate>Wed, 02 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/nacos-cluster-deploy/</guid>
      <description>什么是Nacos Nacos 致力于帮助您发现、配置和管理微服务。Nacos 提供了一组简单易用的特性集，帮助您快速实现动态服务发现、服务配置、服务元数据</description>
    </item>
    
    <item>
      <title>门岗守卫</title>
      <link>/post/gateguard/</link>
      <pubDate>Sun, 16 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/gateguard/</guid>
      <description>门岗守卫 门岗守卫是一套在新冠疫情期间帮助小区门岗实现二维码扫描通行的程序，避免门岗人员与居民之间传递纸质通行证而造成的交叉感染。 项目地址 功能</description>
    </item>
    
    <item>
      <title>从pom文件看Spring Boot用到了哪些技术</title>
      <link>/post/pom-spring/</link>
      <pubDate>Fri, 10 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/pom-spring/</guid>
      <description>Spring Boot越来越流行了，来通过它的pom文件看看都使用到了哪些技术。依赖技术的子依赖并没有在本文列出。 通过查看这些依赖的技术，以后在有单独需</description>
    </item>
    
    <item>
      <title>Spring Cloud Gateway响应式网关</title>
      <link>/post/spring-cloud-gateway/</link>
      <pubDate>Thu, 26 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/spring-cloud-gateway/</guid>
      <description>前言 随着Zuul 1.0的不再维护，Spring官方开发了基于WebFlux编程模型的Spring Cloud Gateway来作为微服务的网关。 WebF</description>
    </item>
    
    <item>
      <title>Gitlab版本式分支管理规范</title>
      <link>/post/gitbranchmgr/</link>
      <pubDate>Sun, 18 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/gitbranchmgr/</guid>
      <description>为解决分支管理混乱，提交代码随意等问题，本文介绍了使用gitlab Release branches flow结合业界优秀实践制定以下分支管理规范及协作流程。 Release branches with GitLab flow 使用</description>
    </item>
    
    <item>
      <title>小程序扇贝单词大师辅助程序</title>
      <link>/post/wordmaster/</link>
      <pubDate>Sat, 21 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/wordmaster/</guid>
      <description>该程序是在知乎答题王（小程序头脑王者）辅助工具的基础上添加了单词大师辅助功能，因此也兼容知乎答题王（小程序头脑王者），首先感谢知乎答题王（小</description>
    </item>
    
    <item>
      <title>GG-Music 全民K歌播放器</title>
      <link>/post/ggmusic/</link>
      <pubDate>Wed, 28 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/ggmusic/</guid>
      <description>全民K歌播放器 Build with Vue.js Github: https://github.com/igordonxiao/GG-music-FE 编译 1 2 3 4 5 6 7 8 # install dependencies npm install # serve with hot reload at localhost:8000 npm run dev # build for production with minification npm run build 功能 获取全民K歌用户信息 获取用户歌曲列表 播放歌曲</description>
    </item>
    
    <item>
      <title>Germ-Code generator for Spring Boot Web Project</title>
      <link>/post/germ/</link>
      <pubDate>Mon, 12 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/germ/</guid>
      <description>This project is used to generate source code with spring boot from database. Github: https://github.com/igordonxiao/germ Feature Generated standard MAVEN project structure Generated file pom.xml Generated file .gitignore Generated spring boot configuration file application.yml Generated Model, Repository, Service, Controller layers Generated basic CRUD operations Swagger documentation Support multi development env Language Java (Currently Supported) Kotlin Python Go Compilation &amp;amp; Running Open file App.kt, update variable DESTINATION_PARENT_DIR to your system path, you</description>
    </item>
    
    <item>
      <title>PG-DAO</title>
      <link>/post/pg-dao/</link>
      <pubDate>Tue, 06 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/pg-dao/</guid>
      <description>A simple Data Access tool which wrapped apache commons-dbutils for PostgreSQL. Github: https://github.com/igordonxiao/pg-dao 特性 支持实体ID自增长 逻辑删除 自动维护createdDate、updatedDate和delFlag字段 常用CRU</description>
    </item>
    
    <item>
      <title>Spring boot 2 Kotlin DSL WebFlux</title>
      <link>/post/springboot2kotlin/</link>
      <pubDate>Fri, 02 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/springboot2kotlin/</guid>
      <description>Spring Boot 2 + Kotlin DSL + Flux Web SpringbootdemoApplication.kt 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 package io.igordonxiao.springbootdemo import org.springframework.boot.Banner.Mode.OFF import org.springframework.boot.autoconfigure.SpringBootApplication import</description>
    </item>
    
    <item>
      <title>使用SpiderKeeper管理爬虫定时任务</title>
      <link>/post/spiderkeeper/</link>
      <pubDate>Fri, 26 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/spiderkeeper/</guid>
      <description>我们经常会使用Scrapy来爬取数据。但爬取行为一般都是使用定时任务来控制。Scrapyd就是一款非常方便的`Scrapy｀任务调度管理工具</description>
    </item>
    
    <item>
      <title>源码安装携程Apollo分布式配置中心</title>
      <link>/post/ctrip-apollo/</link>
      <pubDate>Fri, 26 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/ctrip-apollo/</guid>
      <description>Apollo（阿波罗）是携程框架部门研发的分布式配置中心，能够集中化管理应用不同环境、不同集群的配置，配置修改后能够实时推送到应用端，并且具</description>
    </item>
    
    <item>
      <title>Rancher部署多台主机</title>
      <link>/post/rancher-muti-hosts/</link>
      <pubDate>Mon, 22 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/rancher-muti-hosts/</guid>
      <description>在微服务中，我们需要多台主机，有的提供网关服务，有的提供数据库服务等。在众多的业务服务中，每台主机都会运行多个Docker容器服务。如何对这</description>
    </item>
    
    <item>
      <title>Docker常用命令</title>
      <link>/post/dokcer-commands/</link>
      <pubDate>Fri, 19 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/dokcer-commands/</guid>
      <description>删除所有tag为none的镜像 1 2 3 docker images|grep none|awk &amp;#39;{print $3 }&amp;#39;|xargs docker rmi docker images -a |grep none|awk &amp;#39;{print $3 }&amp;#39;|xargs docker rmi 删除所有镜像 1 docker images -a |awk &amp;#39;{print $3 }&amp;#39;|xargs docker rmi 删除所有的运行的Docker镜像 1 2</description>
    </item>
    
    <item>
      <title>Nginx配置Wordpress</title>
      <link>/post/nginx-wordpress/</link>
      <pubDate>Thu, 18 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/nginx-wordpress/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 server { listen 8089; root /var/www/wp/; index index.html index.php; location / { #rewrite ^/(.*)$ /index.php?__path__=/$1 last; try_files $uri $uri/ /index.php?$args; } rewrite /wp-admin$ $scheme://$host$uri/ permanent; location ~ [^/]\.php(/|$) { # comment try_files $uri =404; to enable pathinfo try_files $uri =404; fastcgi_pass unix:/run/php/php7.1-fpm.sock; fastcgi_index index.php;</description>
    </item>
    
    <item>
      <title>Konga API配置</title>
      <link>/post/konga/</link>
      <pubDate>Wed, 17 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/konga/</guid>
      <description>在现今微服务的大潮下，如何对API进行统一管理势在必行。Konga是一款针对API配置管理工具Kong的GUI工具。 Name API名称 Hosts 主机名称，</description>
    </item>
    
    <item>
      <title>解决gjson无法解析数组字符串的问题</title>
      <link>/post/gjsonhack/</link>
      <pubDate>Tue, 24 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/gjsonhack/</guid>
      <description>gjson是一款Go语言的JSON解析库。 gjson解析JSON确实非常方便，当parse一个JSON对象后返回的是一个Result对象，基</description>
    </item>
    
    <item>
      <title>使用Vagrant建立Django独立开发环境</title>
      <link>/post/vagrantpythondjango/</link>
      <pubDate>Mon, 03 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/vagrantpythondjango/</guid>
      <description>Vagrant及Ubuntu环境搭建 step 1. 安装Vagrant 1.9.5 step 2. 本地创建Django项目, 使用PyCharm 2017.1.4 创建CMS_Service并进</description>
    </item>
    
    <item>
      <title>阿里云ubuntu 16.04.2 LTS安装Rancher稳定版本步骤</title>
      <link>/post/deployrancheronubuntu/</link>
      <pubDate>Tue, 20 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/deployrancheronubuntu/</guid>
      <description>step 1 ssh到Ubuntu服务器安装Docker 17.03.1 参考文章http://www.cnrancher.com/install-docker/ 执行</description>
    </item>
    
    <item>
      <title>使用Spring MVC ResponseEntity进行文件下载时需注意HttpStatus的设置</title>
      <link>/post/springmvcdownloadwithie/</link>
      <pubDate>Wed, 12 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/springmvcdownloadwithie/</guid>
      <description>1 return new ResponseEntity&amp;lt;&amp;gt;(FileUtils.readFileToByteArray(new File(attach.getPath())), headers, HttpStatus.CREATED); 使用HttpStatus.CREATED在Chrome中能正常下载, 但在IE, 搜狗浏览器中却无法下载, 并且也无法使用迅雷来下载</description>
    </item>
    
  </channel>
</rss>